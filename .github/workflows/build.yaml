name: Build Joke Notifier

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggers

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Continue with other builds even if one fails
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            artifact_extension: exe
            artifact_path: dist/*.exe
          - os: macos-latest
            artifact_extension: app
            artifact_path: dist/*.app
          - os: ubuntu-latest
            artifact_extension: AppImage
            artifact_path: dist/*.AppImage

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.1'
          cache: 'pip'  # Enable pip caching for faster builds
      
      - name: Install dependencies (common)
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests win10toast-click

      - name: Install Qt dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xkb1 libxkbcommon-x11-0 libfontconfig1 libdbus-1-3
          pip install PyQt6

      - name: Install dependencies (non-Linux)
        if: matrix.os != 'ubuntu-latest'
        run: |
          pip install PyQt6

      - name: Ensure icon directory exists
        run: |
          mkdir -p images
      
      - name: Create default icon if missing
        run: |
          if [ ! -f "images/app.ico" ]; then
            echo "Creating placeholder icon"
            python -c "
          import base64
          icon_data = 'AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAAAAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AA=='
          with open('images/app.ico', 'wb') as f:
              f.write(base64.b64decode(icon_data))
          "
          fi
        shell: bash
      
      - name: Create Linux AppImage icon
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p JokeNotifier.AppDir/usr/share/icons/hicolor/256x256/apps/
          if [ -f "images/app.ico" ]; then
            sudo apt-get install -y imagemagick
            convert images/app.ico JokeNotifier.AppDir/usr/share/icons/hicolor/256x256/apps/JokeNotifier.png
          else
            # Create a simple placeholder icon
            python -c "
          from PIL import Image, ImageDraw
          img = Image.new('RGB', (256, 256), color=(73, 109, 137))
          d = ImageDraw.Draw(img)
          d.ellipse((50, 50, 206, 206), fill=(255, 255, 255))
          d.rectangle((70, 100, 186, 160), fill=(73, 109, 137))
          img.save('JokeNotifier.AppDir/usr/share/icons/hicolor/256x256/apps/JokeNotifier.png')
          "
          fi
      
      - name: Build with PyInstaller (Windows/macOS)
        if: matrix.os != 'ubuntu-latest'
        run: |
          pyinstaller --name JokeNotifier --windowed --onefile --icon=images/app.ico joke_notifier.py
      
      - name: Build with PyInstaller (Linux AppImage)
        if: matrix.os == 'ubuntu-latest'
        run: |
          # First create a standard build
          pyinstaller --name JokeNotifier --windowed --onefile joke_notifier.py
          
          # Prepare AppDir structure
          mkdir -p JokeNotifier.AppDir/usr/bin
          cp dist/JokeNotifier JokeNotifier.AppDir/usr/bin/
          
          # Create desktop entry
          mkdir -p JokeNotifier.AppDir/usr/share/applications
          cat > JokeNotifier.AppDir/usr/share/applications/JokeNotifier.desktop << EOF
          [Desktop Entry]
          Type=Application
          Name=Joke Notifier
          Exec=JokeNotifier
          Icon=JokeNotifier
          Categories=Utility;
          EOF
          
          # Create AppRun script
          cat > JokeNotifier.AppDir/AppRun << EOF
          #!/bin/bash
          SELF=\$(readlink -f "\$0")
          HERE=\${SELF%/*}
          export PATH="\${HERE}/usr/bin:\${PATH}"
          "\${HERE}/usr/bin/JokeNotifier" "\$@"
          EOF
          chmod +x JokeNotifier.AppDir/AppRun
          
          # Download and use appimagetool
          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage JokeNotifier.AppDir dist/JokeNotifier.AppImage
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: JokeNotifier-${{ matrix.os }}
          path: ${{ matrix.artifact_path }}
          if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts
      
      - name: Calculate version number
        id: version
        run: |
          # Use date-based version number with build count
          GITHUB_RUN_NUMBER="${{ github.run_number }}"
          VERSION_NUMBER=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER
          echo "VERSION=$VERSION_NUMBER" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Joke Notifier v${{ steps.version.outputs.VERSION }}
          tag_name: v${{ steps.version.outputs.VERSION }}
          files: |
            artifacts/JokeNotifier-windows-latest/*.exe
            artifacts/JokeNotifier-macos-latest/*.app
            artifacts/JokeNotifier-ubuntu-latest/*.AppImage
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}